{"version":3,"sources":["components/Task.js","components/Note.js","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","titleElement","useRef","useState","title","length","editMode","setEditMode","className","id","type","checked","onChange","toggleTask","htmlFor","style","display","ref","value","e","changeTask","target","onKeyUp","keyCode","placeholder","date","changeDate","onClick","window","setTimeout","current","focus","xmlns","height","viewBox","width","d","fill","deleteTask","Note","textarea","React","createRef","colorInput","element","document","fullscreenElement","exitFullscreen","this","parentElement","requestFullscreen","dispatch","payload","newTaskId","tasks","querySelector","navigator","share","text","then","console","log","catch","error","borderBottom","color","event","map","task","key","taskId","newValue","createAndEditNewTask","click","goFullscreen","shareText","Component","loadFromLocalStorage","JSON","parse","localStorage","getItem","notes","reducer","state","action","Date","now","note","filter","newTask","undefined","prevNote","updatedNote","stringify","Pad","useReducer","useEffect","setItem","autoFocus","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d380bd68.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './Task.css';\n\nexport default function Task(props) {\n  const titleElement = useRef();\n  const [editMode, setEditMode] = useState(props.title.length === 0)\n\n  function toggleEditMode() {\n    setEditMode(!editMode)\n    if(!editMode) {\n      window.setTimeout(() => titleElement.current.focus(), 100)\n    }\n  }\n\n  return (\n    <div className='task' id={`task-${props.id}`}>\n      <input\n        type='checkbox'\n        id={`checkbox-${props.id}`}\n        checked={props.checked}\n        onChange={props.toggleTask}\n      />\n\n      <label\n        htmlFor={`checkbox-${props.id}`}\n        style={{display: (editMode ? 'none' : 'inline-block')}}\n      >\n        {props.title}\n      </label>\n\n      <input\n        type='text'\n        ref={titleElement}\n        value={props.title}\n        onChange={(e) => props.changeTask(e.target.value)}\n        onKeyUp={(e) => { if(e.keyCode === 13 && e.target.value) setEditMode(false) }}\n        // onBlur={(e) => { if(e.target.value) setEditMode(false) }}\n        placeholder='new task'\n        style={{display: (editMode ? 'inline-block' : 'none')}}\n      />\n\n      { editMode && <input\n        type='date'\n        value={props.date}\n        onChange={(e) => props.changeDate(e.target.value)}\n      /> }\n      { editMode || <span>{ props.date }</span> }\n\n      { !props.checked && <button className='icon' title='Toggle edit mode' onClick={toggleEditMode}>\n        { editMode || <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg>}\n        { editMode && <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>}\n      </button>}\n\n      { props.checked && <button className='icon' title='Delete task' onClick={props.deleteTask}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n      </button>}\n    </div>\n  )\n}\n","import React from \"react\"\nimport './Note.css';\nimport Task from './Task.js'\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textarea = React.createRef();\n    this.colorInput = React.createRef();\n  }\n\n  goFullscreen(element) {\n    if (!document.fullscreenElement) {\n      this.textarea.current.parentElement.requestFullscreen();\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  }\n\n  createAndEditNewTask() {\n    this.props.dispatch({ type: 'addTaskToNote', payload: { id: this.props.id } })\n    window.setTimeout(() => { // TODO: properly wait for next render\n      const newTaskId = this.props.tasks[this.props.tasks.length - 1].id\n      document.querySelector(`#task-${newTaskId} input[type=text]`).focus()\n    }, 50)\n  }\n\n  shareText() {\n    if (navigator.share) {\n      navigator.share({\n        text: this.props.value,\n      })\n        .then(() => console.log('Successful share'))\n        .catch((error) => console.log('Error sharing', error));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"note\" style={{ borderBottom: `4px solid ${this.props.color || 'transparent'}` }}>\n        <input\n          ref={this.colorInput}\n          type='color'\n          onChange={ (e) => this.props.dispatch({ type: 'colorize', payload: { id: this.props.id, color: e.target.value } }) }\n          style={{ display: 'none' }}\n        />\n\n        <textarea\n          ref={this.textarea}\n          value={this.props.value}\n          onChange={ (event) => this.props.dispatch({ type: 'changeNote', payload: { id: this.props.id, value: event.target.value } }) }\n        />\n\n        <ul>\n          {this.props.tasks && this.props.tasks.map(task =>\n            <li key={task.id}>\n              <Task\n                id={task.id}\n                checked={task.checked}\n                title={task.title}\n                date={task.date}\n                toggleTask={ () => this.props.dispatch({ type: 'toggleTask', payload: { id: this.props.id, taskId: task.id } }) }\n                changeTask={ newValue => this.props.dispatch({ type: 'changeTask', payload: { id: this.props.id, taskId: task.id, value: newValue} }) }\n                deleteTask={ () => this.props.dispatch({ type: 'deleteTask', payload: { id: this.props.id, taskId: task.id } }) }\n                changeDate={ newValue => this.props.dispatch({ type: 'changeDate', payload: { id: this.props.id, taskId: task.id, value: newValue} }) }\n              />\n            </li>\n          )}\n        </ul>\n\n        <footer>\n          <button\n            className=\"icon\"\n            title=\"Add a task\"\n            onClick={ () => this.createAndEditNewTask() }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"/></svg>\n          </button>\n\n          <button\n            className=\"icon\"\n            title=\"Colorize\"\n            onClick={() => this.colorInput.current.click()}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z\"/></svg>\n          </button>\n\n          <button\n            className=\"icon\"\n            title=\"Fullscreen\"\n            onClick={(event) => this.goFullscreen(event.element)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/></svg>\n          </button>\n\n          {(this.props.value.length === 0 && (!this.props.tasks || this.props.tasks.length === 0)) ?\n            <button\n              title=\"Delete permanently\"\n              className=\"icon\"\n              onClick={ () => this.props.dispatch({ type: 'deleteNote', payload: { id: this.props.id } }) }>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n            </button> :\n            navigator.share && <button\n            title=\"Share (text only)\"\n            className=\"icon\"\n            onClick={ () => this.shareText() }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"/></svg>\n          </button>\n          }\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Note\n","import React, { useEffect, useReducer } from 'react';\nimport './Pad.css'\nimport Note from './Note.js'\n\n\nfunction loadFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('react-notes')) || { notes: [] }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'addNote':\n      return {\n        notes: [...state.notes, {\n          id: Date.now(),\n          value: '',\n          color: 'transparent',\n          tasks: []\n        }]\n      }\n\n    case 'changeNote':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            note.value = action.payload.value\n          }\n          return note\n        })\n      }\n\n    case 'deleteNote':\n      return {\n        notes: state.notes.filter(note => { return note.id !== action.payload.id })\n      }\n\n    case 'addTaskToNote':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            const newTaskId = Date.now()\n            const newTask = {\n              id: newTaskId,\n              checked: false,\n              title: '',\n              date: undefined\n            }\n            return { ...note, tasks: [...note.tasks, newTask]}\n          }\n          else {return note}\n        })\n      }\n\n    case 'toggleTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            // Deep clone of existing notes... not sure about this:\n            // https://stackoverflow.com/a/122704/3449673\n            // TODO: make sure I update state correctly everywhere!\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.map(task => {\n              if (task.id === action.payload.taskId) {\n                task.checked = (task.checked ? false : true)\n              }\n              return task\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n    case 'changeTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.map(task => {\n              if (task.id === action.payload.taskId) {\n                task.title = action.payload.value\n              }\n              return task\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n    case 'deleteTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.filter(task => {\n              return (task.id !== action.payload.taskId)\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n      case 'changeDate':\n        return {\n          notes: state.notes.map(prevNote => {\n            if (prevNote.id === action.payload.id) {\n              let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n              updatedNote.tasks = updatedNote.tasks.map(task => {\n                if (task.id === action.payload.taskId) {\n                  task.date = action.payload.value\n                }\n                return task\n              })\n              return updatedNote\n            }\n            else {return prevNote}\n          })\n        }\n\n      case 'colorize':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            note.color = action.payload.color // FIXME: does this change prevState??\n          }\n          return note\n        })\n      }\n\n    default:\n      console.log('Unknown action type', action.type);\n      return state\n  }\n}\n\nexport default function Pad() {\n  const [state, dispatch] = useReducer(reducer, { notes: [] }, loadFromLocalStorage)\n\n  function createAndEditNewNote() {\n    dispatch({ type: 'addNote' })\n    window.setTimeout(() => { // TODO: properly wait for next render\n      document.querySelector('.note:last-of-type textarea').focus()\n    }, 50)\n  }\n\n  useEffect( () => {\n    localStorage.setItem('react-notes', JSON.stringify(state))\n  })\n\n  return (\n    <>\n      {state.notes.map(note =>\n        <Note\n          key={note.id}\n          {...note}\n          dispatch={dispatch}\n        />\n      )}\n      <button autoFocus className=\"addBtn\" onClick={() => createAndEditNewNote()}>\n        +\n      </button>\n    </>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Pad from './components/Pad.js'\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <Pad />\n      </main>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}