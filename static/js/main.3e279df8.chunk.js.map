{"version":3,"sources":["components/Task.js","components/Note.js","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["Task","props","titleElement","useRef","useState","title","length","editMode","setEditMode","className","id","type","checked","onChange","toggleTask","htmlFor","style","display","ref","value","e","changeTask","target","onKeyUp","keyCode","placeholder","date","changeDate","onClick","window","setTimeout","current","focus","xmlns","height","viewBox","width","d","fill","deleteTask","Note","textarea","colorInput","showChecked","setshowChecked","borderBottom","color","dispatch","payload","event","tasks","map","task","key","taskId","newValue","newTaskId","document","querySelector","click","element","fullscreenElement","exitFullscreen","parentElement","requestFullscreen","navigator","share","text","then","console","log","catch","error","loadFromLocalStorage","JSON","parse","localStorage","getItem","notes","reducer","state","action","Date","now","note","filter","newTask","undefined","prevNote","updatedNote","stringify","Pad","useReducer","useEffect","setItem","autoFocus","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e279df8.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './Task.css';\n\nexport default function Task(props) {\n  const titleElement = useRef();\n  const [editMode, setEditMode] = useState(props.title.length === 0)\n\n  function toggleEditMode() {\n    setEditMode(!editMode)\n    if(!editMode) {\n      window.setTimeout(() => titleElement.current.focus(), 100)\n    }\n  }\n\n  return (\n    <div className='task' id={`task-${props.id}`}>\n      <input\n        type='checkbox'\n        id={`checkbox-${props.id}`}\n        checked={props.checked}\n        onChange={props.toggleTask}\n      />\n\n      <label\n        htmlFor={`checkbox-${props.id}`}\n        style={{display: (editMode ? 'none' : 'inline-block')}}\n      >\n        {props.title}\n      </label>\n\n      <input\n        type='text'\n        ref={titleElement}\n        value={props.title}\n        onChange={(e) => props.changeTask(e.target.value)}\n        onKeyUp={(e) => { if(e.keyCode === 13 && e.target.value) setEditMode(false) }}\n        // onBlur={(e) => { if(e.target.value) setEditMode(false) }}\n        placeholder='new task'\n        style={{display: (editMode ? 'inline-block' : 'none')}}\n      />\n\n      { editMode && <input\n        type='date'\n        value={props.date}\n        onChange={(e) => props.changeDate(e.target.value)}\n      /> }\n      { editMode || <span>{ props.date }</span> }\n\n      { !props.checked && <button className='icon' title='Toggle edit mode' onClick={toggleEditMode}>\n        { editMode || <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg>}\n        { editMode && <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>}\n      </button>}\n\n      { props.checked && <button className='icon' title='Delete task' onClick={props.deleteTask}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n      </button>}\n    </div>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport './Note.css';\nimport Task from './Task.js'\n\nexport default function Note(props) {\n  const textarea = useRef();\n  const colorInput = useRef();\n  const [showChecked, setshowChecked] = useState(true)\n\n  function goFullscreen(element) {\n    if (!document.fullscreenElement) {\n      textarea.current.parentElement.requestFullscreen();\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  }\n\n  function createAndEditNewTask() {\n    props.dispatch({ type: 'addTaskToNote', payload: { id: props.id } })\n    window.setTimeout(() => { // TODO: properly wait for next render\n      const newTaskId = props.tasks[props.tasks.length - 1].id\n      document.querySelector(`#task-${newTaskId} input[type=text]`).focus()\n    }, 50)\n  }\n\n  function shareText() {\n    if (navigator.share) {\n      navigator.share({\n        text: props.value,\n      })\n        .then(() => console.log('Successful share'))\n        .catch((error) => console.log('Error sharing', error));\n    }\n  }\n\n  return (\n    <div className=\"note\" style={{ borderBottom: `4px solid ${props.color || 'transparent'}` }}>\n      <input\n        ref={colorInput}\n        type='color'\n        onChange={ (e) => props.dispatch({ type: 'colorize', payload: { id: props.id, color: e.target.value } }) }\n        style={{ display: 'none' }}\n      />\n\n      <textarea\n        ref={textarea}\n        value={props.value}\n        onChange={ (event) => props.dispatch({ type: 'changeNote', payload: { id: props.id, value: event.target.value } }) }\n      />\n\n      <ul>\n        {props.tasks && props.tasks.map(task =>\n          (!task.checked || showChecked) && <li key={task.id}>\n            <Task\n              id={task.id}\n              checked={task.checked}\n              title={task.title}\n              date={task.date}\n              toggleTask={ () => props.dispatch({ type: 'toggleTask', payload: { id: props.id, taskId: task.id } }) }\n              changeTask={ newValue => props.dispatch({ type: 'changeTask', payload: { id: props.id, taskId: task.id, value: newValue} }) }\n              deleteTask={ () => props.dispatch({ type: 'deleteTask', payload: { id: props.id, taskId: task.id } }) }\n              changeDate={ newValue => props.dispatch({ type: 'changeDate', payload: { id: props.id, taskId: task.id, value: newValue} }) }\n            />\n          </li>\n        )}\n      </ul>\n\n      <footer>\n        {showChecked ? <button\n          className=\"icon\"\n          title=\"Hide done tasks\"\n          onClick={ () => setshowChecked(false) }>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"/></svg>\n        </button>\n        :\n        <button\n          className=\"icon\"\n          title=\"Show done tasks\"\n          onClick={ () => setshowChecked(true) }>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"black\" width=\"24px\" height=\"24px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"/></svg>\n        </button>}\n\n        <button\n          className=\"icon\"\n          title=\"Add a task\"\n          onClick={ () => createAndEditNewTask() }>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"/></svg>\n        </button>\n\n        <button\n          className=\"icon\"\n          title=\"Colorize\"\n          onClick={() => colorInput.current.click()}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z\"/></svg>\n        </button>\n\n        <button\n          className=\"icon\"\n          title=\"Fullscreen\"\n          onClick={(event) => goFullscreen(event.element)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/></svg>\n        </button>\n\n        {(props.value.length === 0 && (!props.tasks || props.tasks.length === 0)) ?\n          <button\n            title=\"Delete permanently\"\n            className=\"icon\"\n            onClick={ () => props.dispatch({ type: 'deleteNote', payload: { id: props.id } }) }>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n          </button> :\n          navigator.share && <button\n          title=\"Share (text only)\"\n          className=\"icon\"\n          onClick={ () => shareText() }>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\"/></svg>\n        </button>\n        }\n      </footer>\n    </div>\n  )\n}\n","import React, { useEffect, useReducer } from 'react';\nimport './Pad.css'\nimport Note from './Note.js'\n\n\nfunction loadFromLocalStorage() {\n  return JSON.parse(localStorage.getItem('react-notes')) || { notes: [] }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'addNote':\n      return {\n        notes: [...state.notes, {\n          id: Date.now(),\n          value: '',\n          color: 'transparent',\n          tasks: []\n        }]\n      }\n\n    case 'changeNote':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            note.value = action.payload.value\n          }\n          return note\n        })\n      }\n\n    case 'deleteNote':\n      return {\n        notes: state.notes.filter(note => { return note.id !== action.payload.id })\n      }\n\n    case 'addTaskToNote':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            const newTaskId = Date.now()\n            const newTask = {\n              id: newTaskId,\n              checked: false,\n              title: '',\n              date: undefined\n            }\n            return { ...note, tasks: [...note.tasks, newTask]}\n          }\n          else {return note}\n        })\n      }\n\n    case 'toggleTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            // Deep clone of existing notes... not sure about this:\n            // https://stackoverflow.com/a/122704/3449673\n            // TODO: make sure I update state correctly everywhere!\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.map(task => {\n              if (task.id === action.payload.taskId) {\n                task.checked = (task.checked ? false : true)\n              }\n              return task\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n    case 'changeTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.map(task => {\n              if (task.id === action.payload.taskId) {\n                task.title = action.payload.value\n              }\n              return task\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n    case 'deleteTask':\n      return {\n        notes: state.notes.map(prevNote => {\n          if (prevNote.id === action.payload.id) {\n            let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n            updatedNote.tasks = updatedNote.tasks.filter(task => {\n              return (task.id !== action.payload.taskId)\n            })\n            return updatedNote\n          }\n          else {return prevNote}\n        })\n      }\n\n      case 'changeDate':\n        return {\n          notes: state.notes.map(prevNote => {\n            if (prevNote.id === action.payload.id) {\n              let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n              updatedNote.tasks = updatedNote.tasks.map(task => {\n                if (task.id === action.payload.taskId) {\n                  task.date = action.payload.value\n                }\n                return task\n              })\n              return updatedNote\n            }\n            else {return prevNote}\n          })\n        }\n\n      case 'colorize':\n      return {\n        notes: state.notes.map(note => {\n          if (note.id === action.payload.id) {\n            note.color = action.payload.color // FIXME: does this change prevState??\n          }\n          return note\n        })\n      }\n\n    default:\n      console.log('Unknown action type', action.type);\n      return state\n  }\n}\n\nexport default function Pad() {\n  const [state, dispatch] = useReducer(reducer, { notes: [] }, loadFromLocalStorage)\n\n  function createAndEditNewNote() {\n    dispatch({ type: 'addNote' })\n    window.setTimeout(() => { // TODO: properly wait for next render\n      document.querySelector('.note:last-of-type textarea').focus()\n    }, 50)\n  }\n\n  useEffect( () => {\n    localStorage.setItem('react-notes', JSON.stringify(state))\n  })\n\n  return (\n    <>\n      {state.notes.map(note =>\n        <Note\n          key={note.id}\n          {...note}\n          dispatch={dispatch}\n        />\n      )}\n      <button autoFocus className=\"addBtn\" onClick={() => createAndEditNewNote()}>\n        +\n      </button>\n    </>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Pad from './components/Pad.js'\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <Pad />\n      </main>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}