{"version":3,"sources":["logo.png","components/Task.js","components/Note.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Task","props","useState","editMode","setEditMode","className","type","id","checked","onChange","toggleTask","htmlFor","style","display","title","value","e","changeTask","target","onBlur","placeholder","onClick","window","setTimeout","document","getElementById","focus","xmlns","height","viewBox","width","d","fill","deleteTask","Note","this","element","fullscreenElement","exitFullscreen","parentElement","requestFullscreen","click","borderBottom","color","colorize","event","handleChange","tasks","map","task","key","newValue","pickColor","goFullscreen","addTask","length","deleteNote","React","Component","App","state","notes","bind","addNote","setState","prevState","concat","Date","now","note","filter","newTaskId","prevNote","updatedNote","JSON","parse","stringify","newTask","push","noteId","taskId","console","log","restoredNotes","localStorage","getItem","setItem","href","src","logo","alt","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.58085916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e35fa18e.png\";","import React, { useState } from 'react';\nimport './Task.css';\n\nexport default function Task(props) {\n  const [editMode, setEditMode] = useState(false)\n\n  function toggleEditMode() {\n    setEditMode(!editMode)\n    if(!editMode) {\n      window.setTimeout(() => document.getElementById(`task-title-${props.id}`).focus(), 100)\n    }\n  }\n\n  return (\n    <div className='task'>\n      <input\n        type='checkbox'\n        id={`checkbox-${props.id}`}\n        checked={props.checked}\n        onChange={props.toggleTask}\n      />\n\n      <label\n        htmlFor={`checkbox-${props.id}`}\n        style={{display: (editMode ? 'none' : 'inline-block')}}\n      >\n        {props.title}\n      </label>\n\n      <input\n        type='text'\n        id={`task-title-${props.id}`}\n        value={props.title}\n        onChange={(e) => props.changeTask(e.target.value)}\n        onBlur={() => setEditMode(false)}\n        placeholder='new task'\n        style={{display: (editMode ? 'inline-block' : 'none')}}\n      />\n\n      { !props.checked && <button className='icon' onClick={toggleEditMode}>\n        { editMode || <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg>}\n        { editMode && <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"/></svg>}\n      </button>}\n\n      { props.checked && <button className='icon' title='Delete task' onClick={props.deleteTask}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n      </button>}\n    </div>\n  )\n}\n","import React from \"react\"\nimport './Note.css';\nimport Task from './Task.js'\n\nclass Note extends React.Component {\n  componentDidMount() {\n    document.getElementById(`note-${this.props.id}`).focus()\n  }\n\n  goFullscreen(element) {\n    if (!document.fullscreenElement) {\n      document.getElementById(`note-${this.props.id}`).parentElement.requestFullscreen();\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  }\n\n  pickColor() {\n    document.getElementById(`color-${this.props.id}`).click()\n  }\n\n\n  render() {\n    return (\n      <div className=\"note\" style={{ borderBottom: `4px solid ${this.props.color || 'transparent'}` }}>\n        <input\n          id={`color-${this.props.id}`}\n          type='color'\n          onChange={(e) => this.props.colorize(this.props.id, e.target.value)}\n          style={{ display: 'none' }}\n        />\n\n        <textarea\n          id={`note-${this.props.id}`}\n          value={this.props.value}\n          onChange={(event) => this.props.handleChange(this.props.id, event.target.value)}\n        />\n\n        {this.props.tasks && this.props.tasks.map(task =>\n          <Task\n            key={task.id}\n            id={task.id}\n            checked={task.checked}\n            title={task.title}\n            toggleTask={() => this.props.toggleTask(this.props.id, task.id)}\n            changeTask={newValue => this.props.changeTask(this.props.id, task.id, newValue)}\n            deleteTask={() => this.props.deleteTask(this.props.id, task.id)} />\n        )}\n\n        <footer>\n          <button\n            className=\"icon\"\n            title=\"Colorize\"\n            onClick={() => this.pickColor()}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20.71 5.63l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z\"/></svg>\n          </button>\n\n          <button\n            className=\"icon\"\n            title=\"Fullscreen\"\n            onClick={(event) => this.goFullscreen(event.element)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"/></svg>\n          </button>\n\n          <button\n            className=\"icon\"\n            title=\"Add a task\"\n            onClick={(event) => this.props.addTask(this.props.id)}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z\"/></svg>\n          </button>\n\n          {this.props.value.length === 0 &&\n            <button\n              title='Delete permanently'\n              className=\"icon\"\n              onClick={() => this.props.deleteNote(this.props.id)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\n            </button>}\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Note\n","import React from 'react';\nimport logo from './logo.png';\nimport './App.css';\nimport Note from './components/Note.js'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      notes: []\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.deleteNote = this.deleteNote.bind(this)\n    this.addNote = this.addNote.bind(this)\n    this.addTask = this.addTask.bind(this)\n    this.toggleTask = this.toggleTask.bind(this)\n    this.changeTask = this.changeTask.bind(this)\n    this.deleteTask = this.deleteTask.bind(this)\n    this.colorize = this.colorize.bind(this)\n  }\n\n  addNote() {\n    this.setState(prevState => {\n      return {\n        notes: prevState.notes.concat({id: Date.now(), value: '', color: 'transparent', tasks: []})\n      }\n    })\n  }\n\n  handleChange(id, newValue) {\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(note => {\n        if (note.id === id) {\n          note.value = newValue // FIXME: does this change prevState??\n        }\n        return note\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n  deleteNote(id) {\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.filter(note => {\n        return note.id !== id\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n  addTask(id) {\n    const newTaskId = Date.now()\n\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(prevNote => {\n        if (prevNote.id === id) {\n          // Deep clone of existing notes... not sure about this:\n          // https://stackoverflow.com/a/122704/3449673\n          // TODO: make sure I update state correctly everywhere!\n          let updatedNote = JSON.parse(JSON.stringify(prevNote))\n          const newTask = { id: newTaskId, checked: false, title: '' }\n          !!updatedNote.tasks || (updatedNote.tasks = [])\n          updatedNote.tasks.push(newTask)\n          return updatedNote\n        }\n        else {return prevNote}\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n\n    // window.setTimeout(() => document.getElementById(`task-title-${newTaskId}`).focus(), 100)\n  }\n\n  toggleTask (noteId, taskId) {\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(prevNote => {\n        if (prevNote.id === noteId) {\n          let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n          updatedNote.tasks = updatedNote.tasks.map(task => {\n            if (task.id === taskId) {\n              task.checked = (task.checked ? false : true)\n            }\n            return task\n          })\n          return updatedNote\n        }\n        else {return prevNote}\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n  changeTask(noteId, taskId, newValue) {\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(prevNote => {\n        if (prevNote.id === noteId) {\n          let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n          updatedNote.tasks = updatedNote.tasks.map(task => {\n            if (task.id === taskId) {\n              task.title = newValue\n            }\n            return task\n          })\n          return updatedNote\n        }\n        else {return prevNote}\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n  deleteTask(noteId, taskId) {\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(prevNote => {\n        if (prevNote.id === noteId) {\n          let updatedNote = JSON.parse(JSON.stringify(prevNote))\n\n          updatedNote.tasks = updatedNote.tasks.filter(task => {\n            return (task.id !== taskId)\n          })\n          return updatedNote\n        }\n        else {return prevNote}\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n  colorize(id, color) {\n    console.log(id, color);\n    this.setState(prevState => {\n      const updatedNotes = prevState.notes.map(note => {\n        if (note.id === id) {\n          note.color = color // FIXME: does this change prevState??\n        }\n        return note\n      })\n      return {\n        notes: updatedNotes\n      }\n    })\n  }\n\n\n  componentDidMount() {\n    const restoredNotes = JSON.parse(localStorage.getItem('react-notes'))\n    this.setState(restoredNotes ? restoredNotes : {notes: [{id: 1, value: ''}]})\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('react-notes', JSON.stringify(this.state))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a href=\"https://github.com/thutterer/txt/\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </a>\n          <button className=\"addBtn\" onClick={this.addNote}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg>\n          </button>\n        </header>\n\n        <main>\n          {this.state.notes.map(note =>\n            <Note\n              key={note.id}\n              {...note}\n              handleChange={this.handleChange}\n              deleteNote={this.deleteNote}\n              addTask={this.addTask}\n              toggleTask={this.toggleTask}\n              changeTask={this.changeTask}\n              deleteTask={this.deleteTask}\n              colorize={this.colorize}\n            />\n          )}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}